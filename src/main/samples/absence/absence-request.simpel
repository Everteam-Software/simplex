processConfig.inMem = false;
processConfig.address = "/absence";

shotBase = "http://localhost:3434/singleshot";
myBase = "http://localhost:3434";

function addHeaders(login, password, req) {
  req.headers.basicAuth.login = login;
  req.headers.basicAuth.password = password;
  req.headers.Accept = "application/xml";
  return req;
}

function buildAbsenceRequest(login, password, assignee, callback, from, to) {
  var formHtml = "<fieldset><legend>AbsenceRequest</legend>" + 
                  "<p>{{ creator.fullname }} requested a leave of absence.</p>" + 
                  "<dl><dt>Accept</dt><dd><input type='radio' name='data[accept]' value='true'></dd>" + 
                      "<dt>Refuse</dt><dd><input type='radio' name='data[accept]' value='false'></dd>" + 
                      "<dt>Comment: </dt><dd><textarea name='data[comment]'></textarea></dd>" +
                      "<dt>From: </dt><dd><input name='data[from]' type='text' class='date' value = '" + from + "'/></dd>" +
                      "<dt>To: </dt><dd><input name='data[to]' type='text' class='date' value='" + to + "'/></dd>" +
                  "</dl></fieldset>";
  task = <task><title>Leave of absence request</title>
            <description>Leave of absence request</description>
            <owner>{assignee}</owner>
            <webhooks type="array"><webhook><event>completed</event><url>{callback}</url><enctype>application/xml</enctype></webhook></webhooks>
            <form><html>{formHtml}</html></form>
         </task>;
  return addHeaders(login, password, task);
}

function buildNotification(login, password, assignee, result, from, to) {
  task = <notification><subject>Absence request response</subject>
            <body>Your absence request from {from} to {to} has been {result}.</body>
            <recipients><recipient>{assignee}</recipient></recipients>
         </notification>;
  return addHeaders(login, password, task);
}

process TaskCreator { 
  callback = resource("/callback");
  
  receive(self) { |s|
    leave = buildAbsenceRequest("singleshot", "secret", "bond", 
      myBase + callback, s.data.from, s.data.to);
    resp = request(shotBase + "/tasks", "POST", leave);
    print("### waiting for callback for " + resp.headers.Location);

    reply(resp);
  }

  updatedTask = <task/>;
  receive(callback) { |msg|
    print("### callback received!! " + msg);
    updatedTask = msg;
    reply();
  }

  if (updatedTask.data.accept == "true") {
    print("### Absence request accepted " + updatedTask.data.from);
    status = "accepted";
  } else {
    print("### Absence request refused");
    status = "refused";
  }

  confirmation = buildNotification("singleshot", "secret", "singleshot", 
    status, updatedTask.data.from.text() , updatedTask.data.to.text());
  request(shotBase + "/notifications", "POST", confirmation);
}

